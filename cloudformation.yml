AWSTemplateFormatVersion: '2010-09-09'
Description: "This template will deploy this job."

Resources:
  MessageLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: com.xing.MessageHandler
      FunctionName: hongxing-MessageLambdaFunction
      Role: arn:aws:iam::494526681395:role/for-aws-training-2
      Code:
        S3Bucket: hongxing-deployment-bucket
        S3Key: func/v1/cloudwatch-training-1.0-SNAPSHOT.jar
      Runtime: java8
      Timeout: 60
      MemorySize: 512

  RuleLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MessageLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(2 minutes)"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "MessageLambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  MetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: s3 object count alarm
      AlarmName: hongxing-S3ObjectCountAlarm
      Namespace: /aws/lambda/hongxing
      MetricName: honxing-custom-memory-metric
      ComparisonOperator: LessThanOrEqualToThreshold
      Statistic: Minimum
      Threshold: 4.0
      EvaluationPeriods: 1
      Period: 300
      AlarmActions:
        - !Ref SNSTopic

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "hongxingTopic"

  EmailSNsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: 921261636@qq.com
      Protocol: email
      TopicArn: !Ref SNSTopic

  SNSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SNSTopic
      PolicyDocument:
        Id: MyTopicPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: allow-alarm-subscription
            Effect: Allow
            Principal: '*'
            Action:
              - sns:Subscribe
              - SNS:Publish
            Resource: '*'

  CountMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName:
        !Sub '/aws/lambda/${MessageLambdaFunction}'
      FilterPattern: "[bucket=hongxing-deployment-bucket, has=has, count, unit]"
      MetricTransformations:
        - MetricValue: $count
          MetricNamespace: /aws/lambda/hongxing
          MetricName: hongxing-customer-metric-by-filter